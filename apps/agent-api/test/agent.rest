### Agent API REST Client 测试文件
### 使用 VS Code REST Client 扩展运行这些测试
### 确保先运行 seed 数据: pnpm run db:seed

@baseUrl = http://localhost:3001/api
@contentType = application/json

### 1. 健康检查
GET {{baseUrl}}/health
Content-Type: {{contentType}}

### 2. 获取所有智能体 (查看 seed 数据)
GET {{baseUrl}}/agents
Content-Type: {{contentType}}

### 3. 创建新的智能体 - 时间助手
# @name createTimeAgent
POST {{baseUrl}}/agents
Content-Type: {{contentType}}

{
  "name": "时间查询助手",
  "description": "专门处理时间相关查询的智能助手，能够获取不同时区的时间信息",
  "prompt": "你是一个专业的时间助手，能够帮助用户获取不同时区的时间信息。请用友好和专业的语气回答用户的时间相关问题。当用户询问时间时，你应该使用 getCurrentTime 工具来获取准确的时间信息。",
  "options": {
    "temperature": 0.7,
    "maxTokens": 1000,
    "model": "gpt-4o-mini"
  }
}

### 4. 创建新的智能体 - 数据分析师
# @name createDataAgent
POST {{baseUrl}}/agents
Content-Type: {{contentType}}

{
  "name": "数据分析专家",
  "description": "专业的数据分析师，能够分析各种数据并提供有价值的洞察",
  "prompt": "你是一个专业的数据分析师，擅长处理和分析各种类型的数据。你能够：1. 识别数据中的模式和趋势 2. 提供清晰的数据解释 3. 给出基于数据的建议 4. 创建有意义的数据可视化建议。请用专业但易懂的语言解释分析结果。",
  "options": {
    "temperature": 0.3,
    "maxTokens": 1500,
    "model": "gpt-4o-mini"
  }
}

### 4. 创建新的智能体 - 工作流设计师
POST {{baseUrl}}/agents
Content-Type: {{contentType}}

{
  "name": "AI工作流设计师",
  "description": "专门设计和创建AI工作流的智能助手，能够根据用户需求设计合适的自动化流程",
  "prompt": "你是一个专业的工作流设计专家，能够根据用户需求设计合适的AI工作流。你的职责包括：1. 分析用户的业务需求 2. 识别可以自动化的流程步骤 3. 选择合适的工具和智能体 4. 设计高效的工作流程 5. 提供工作流优化建议。请用清晰的逻辑思维来设计工作流。",
  "options": {
    "temperature": 0.5,
    "maxTokens": 2000,
    "model": "gpt-4o-mini"
  }
}

### 6. 获取特定智能体详情 (自动使用创建的智能体ID)
GET {{baseUrl}}/agents/{{createTimeAgent.response.body.id}}
Content-Type: {{contentType}}

### 7. 更新智能体信息 (自动使用创建的智能体ID)
PUT {{baseUrl}}/agents/{{createTimeAgent.response.body.id}}
Content-Type: {{contentType}}

{
  "name": "更新后的时间查询助手",
  "description": "这是更新后的时间助手描述",
  "prompt": "你是一个已经更新的时间助手，具有更强的时间处理能力。",
  "options": {
    "temperature": 0.8,
    "maxTokens": 1200,
    "model": "gpt-4o-mini"
  }
}

### 8. 获取更新后的智能体详情
GET {{baseUrl}}/agents/{{createTimeAgent.response.body.id}}
Content-Type: {{contentType}}

### 9. 软删除智能体 (自动使用创建的智能体ID)
DELETE {{baseUrl}}/agents/{{createTimeAgent.response.body.id}}
Content-Type: {{contentType}}

### 10. 使用数据分析师智能体进行测试
GET {{baseUrl}}/agents/{{createDataAgent.response.body.id}}
Content-Type: {{contentType}}

### 11. 更新数据分析师智能体
PUT {{baseUrl}}/agents/{{createDataAgent.response.body.id}}
Content-Type: {{contentType}}

{
  "name": "高级数据分析专家",
  "description": "升级版的数据分析师，具有更强的分析能力",
  "options": {
    "temperature": 0.2,
    "maxTokens": 2000
  }
}

### 12. 测试错误处理 - 获取不存在的智能体
GET {{baseUrl}}/agents/non-existent-id
Content-Type: {{contentType}}

### 13. 测试错误处理 - 创建无效的智能体 (缺少必需字段)
POST {{baseUrl}}/agents
Content-Type: {{contentType}}

{
  "description": "缺少名称字段的智能体",
  "options": {}
}

### 14. 测试错误处理 - 更新不存在的智能体
PUT {{baseUrl}}/agents/non-existent-id
Content-Type: {{contentType}}

{
  "name": "不存在的智能体"
}

### 15. 测试错误处理 - 删除不存在的智能体
DELETE {{baseUrl}}/agents/non-existent-id
Content-Type: {{contentType}}

### 16. 批量测试 - 创建客服助手
# @name createServiceAgent
POST {{baseUrl}}/agents
Content-Type: {{contentType}}

{
  "name": "客服助手",
  "description": "专业的客户服务智能助手",
  "prompt": "你是一个专业的客服助手，能够友好、耐心地解答客户问题。",
  "options": {
    "temperature": 0.6,
    "maxTokens": 800
  }
}

### 17. 创建代码审查助手
# @name createCodeReviewAgent
POST {{baseUrl}}/agents
Content-Type: {{contentType}}

{
  "name": "代码审查助手",
  "description": "专门进行代码审查和质量检查的智能助手",
  "prompt": "你是一个专业的代码审查专家，能够识别代码中的问题并提供改进建议。",
  "options": {
    "temperature": 0.2,
    "maxTokens": 1500
  }
}

### 18. 创建文档生成助手
# @name createDocAgent
POST {{baseUrl}}/agents
Content-Type: {{contentType}}

{
  "name": "文档生成助手",
  "description": "专门生成技术文档和API文档的智能助手",
  "prompt": "你是一个专业的技术文档编写专家，能够生成清晰、准确的技术文档。",
  "options": {
    "temperature": 0.4,
    "maxTokens": 2000
  }
}

### 19. 使用变量测试 - 批量操作客服助手
GET {{baseUrl}}/agents/{{createServiceAgent.response.body.id}}
Content-Type: {{contentType}}

### 20. 更新客服助手
PUT {{baseUrl}}/agents/{{createServiceAgent.response.body.id}}
Content-Type: {{contentType}}

{
  "name": "高级客服助手",
  "description": "升级版客服助手，具有更强的问题解决能力"
}

### 21. 删除客服助手
DELETE {{baseUrl}}/agents/{{createServiceAgent.response.body.id}}
Content-Type: {{contentType}}

### 22. 最终验证 - 获取所有智能体
GET {{baseUrl}}/agents
Content-Type: {{contentType}}

### 23. 清理测试数据 - 删除创建的智能体
DELETE {{baseUrl}}/agents/{{createDataAgent.response.body.id}}
Content-Type: {{contentType}}

###
DELETE {{baseUrl}}/agents/{{createCodeReviewAgent.response.body.id}}
Content-Type: {{contentType}}

###
DELETE {{baseUrl}}/agents/{{createDocAgent.response.body.id}}
Content-Type: {{contentType}}

### ========================================
### 使用说明：
### ========================================
# 1. 安装 VS Code 的 REST Client 扩展
# 2. 确保 agent-api 服务正在运行 (http://localhost:3001)
# 3. 先运行 seed 数据: cd apps/agent-api && pnpm run db:seed
# 4. 按顺序执行测试，变量会自动传递
# 5. 观察响应结果验证API功能是否正常

### 变量说明：
# @baseUrl: API服务的基础URL
# @contentType: 请求内容类型
# {{createTimeAgent.response.body.id}}: 自动获取创建的智能体ID
# {{createDataAgent.response.body.id}}: 自动获取数据分析师ID
# 等等...
